/*
 * test.cc
 *
 *  Created on: 16 Oca 2019
 *      Author: tuhanan
 */

#include <string.h>
#include <omnetpp.h>

using namespace omnetpp;

class FST : public cSimpleModule
{
private:
    bool parent;
    std::vector<std::string> children;
protected:
    virtual void initialize() override;
    virtual void handleMessage(cMessage *msg) override;
};

Define_Module(FST);

void FST::initialize(){
    parent = false;
    cDelayChannel * channel = check_and_cast<cDelayChannel*>(gate("gate$o")->getChannel());
                   double delay1 = channel->getDelay().dbl();
                   EV <<  "delay : " << delay1;
    if(strcmp(getName(),"a") == 0){
        parent = true;
        scheduleAt(0.0, new cMessage("Probe"));
    }
}

void FST::handleMessage(cMessage *msg){
    if(strcmp(msg->getName(),"Probe") == 0){
        if(msg->getArrivalGateId() != -1){
            if(parent == false){
                parent = true;
                send(new cMessage("Ack"),"gate$o",msg->getArrivalGate()->getIndex());

                for(int i = 0; i < this->gateCount() / 2; i ++){
                    if(msg->arrivedOn("gate$i",i)) { continue ;}
                    send(new cMessage("Probe"),"gate$o",i);
                }
            }
            else{
                 send(new cMessage("Reject"),"gate$o",msg->getArrivalGate()->getIndex());
            }
        }else{
            for(int i = 0; i < this->gateCount() / 2; i ++){
                if(msg->arrivedOn("gate$i",i)) { continue ;}
                send(new cMessage("Probe"),"gate$o",i);
            }
        }
    }else if (strcmp(msg->getName(),"Ack") == 0){
            children.push_back(msg->getArrivalGate()->getPreviousGate()->getOwner()->getFullName());

            EV << getName() << "'s children : ";
            for(int i = 0 ; i < children.size(); i ++){
                EV << children.at(i) << ",";
            }
            EV << "\n";
    }else{
    }
}
